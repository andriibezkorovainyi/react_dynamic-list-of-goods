{"version":3,"sources":["GoodsList.tsx","api/goods.ts","types/RequestType.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","className","map","good","style","color","name","id","API_URL","wait","delay","Promise","resolve","setTimeout","getAll","a","fetch","response","json","RequestType","get5First","sort","good1","good2","localeCompare","slice","getRedGoods","then","filter","App","useState","setGoods","isLoading","setIsLoading","hasError","setHasError","handleClick","request","buttonsData","GetAll","onClick","content","dataInfo","Get5First","GetRedGoods","Object","values","requestType","type","ReactDOM","render","document","getElementById"],"mappings":"qQAOaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,qBAAKC,UAAU,UAAf,SACE,6BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,qBAAKF,UAAU,GAAf,SACE,oBAEE,UAAQ,OACRG,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,gBCVhBC,EAAU,wEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAG7C,SAAeI,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACCN,EAAK,KADN,uBAEkBO,MAAMR,GAFxB,cAECS,EAFD,yBAIEA,EAASC,QAJX,4C,sBAOA,IChBKC,EDgBCC,EAAS,uCAAG,4BAAAL,EAAA,sEACAD,IADA,cACjBG,EADiB,yBAGhBA,EAASI,MACd,SAACC,EAAOC,GAAR,OAAkBD,EAAMhB,KAAKkB,cAAcD,EAAMjB,SACjDmB,MAAM,EAAG,IALY,2CAAH,qDAQTC,EAAc,WACzB,OAAOZ,IACJa,MAAK,SAAA3B,GAAK,OAAIA,EAAM4B,QAAO,SAAAzB,GAAI,MAAmB,QAAfA,EAAKE,c,SC1BjCc,K,gBAAAA,E,sBAAAA,E,2BAAAA,M,KCOL,IAAMU,EAAgB,WAAO,IAAD,EACjC,EAA0BC,mBAAiB,IAA3C,mBAAO9B,EAAP,KAAc+B,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,eAAAtB,EAAA,6DAClBoB,GAAY,GACZF,GAAa,GAFK,kBAKOI,IALP,OAKVpB,EALU,OAOhBgB,GAAa,GACbF,EAASd,GARO,kDAUhBgB,GAAa,GACbE,GAAY,GAXI,0DAAH,sDAeXG,GAAW,mBACdnB,EAAYoB,OAAS,CACpBC,QAAS,kBAAMJ,EAAYtB,IAC3B2B,QAAS,YACTC,SAAU,eAJG,cAMdvB,EAAYwB,UAAY,CACvBH,QAAS,kBAAMJ,EAAYhB,IAC3BqB,QAAS,gBACTC,SAAU,sBATG,cAWdvB,EAAYyB,YAAc,CACzBJ,QAAS,kBAAMJ,EAAYV,IAC3Be,QAAS,YACTC,SAAU,eAdG,GAkBjB,OACE,qBAAKzC,UAAU,cAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,GAAd,mCAEC4C,OAAOC,OAAO3B,GAAajB,KAAI,SAAA6C,GAC9B,MAAuCT,EAAYS,GAA3CP,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,SAE1B,OACE,wBAEEM,KAAK,SACL,UAASN,EACTF,QAASA,EACTvC,UAAU,SALZ,wBAOWwC,IANJC,MAWVV,GACC,qBAAK/B,UAAU,2BAAf,SACE,qBAAKA,UAAU,wBAIlBiC,IAAaF,GACZ,qBAAK/B,UAAU,oCAAf,qDAKA+B,IAAcE,GAAY,cAACrC,EAAD,CAAWG,MAAOA,UC3EtDiD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd0fc750.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <div className=\"content\">\n    <ul>\n      {goods.map(good => (\n        <div className=\"\">\n          <li\n            key={good.id}\n            data-cy=\"good\"\n            style={{ color: good.color }}\n          >\n            {good.name}\n          </li>\n        </div>\n      ))}\n    </ul>\n  </div>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nfunction wait(delay: number): Promise<number> {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getAll(): Promise<Good[]> {\n  await wait(1000);\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n\nexport const get5First = async () => {\n  const response = await getAll();\n\n  return response.sort(\n    (good1, good2) => good1.name.localeCompare(good2.name),\n  ).slice(0, 5);\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","export enum RequestType {\n  GetAll = 'getAll',\n  Get5First = 'get5First',\n  GetRedGoods = 'getRedGoods',\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { RequestType } from './types/RequestType';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleClick = async (request: () => Promise<Good[]>) => {\n    setHasError(false);\n    setIsLoading(true);\n\n    try {\n      const response = await request();\n\n      setIsLoading(false);\n      setGoods(response);\n    } catch (error) {\n      setIsLoading(false);\n      setHasError(true);\n    }\n  };\n\n  const buttonsData = {\n    [RequestType.GetAll]: {\n      onClick: () => handleClick(getAll),\n      content: 'all goods',\n      dataInfo: 'all-button',\n    },\n    [RequestType.Get5First]: {\n      onClick: () => handleClick(get5First),\n      content: '5 first goods',\n      dataInfo: 'first-five-button',\n    },\n    [RequestType.GetRedGoods]: {\n      onClick: () => handleClick(getRedGoods),\n      content: 'red goods',\n      dataInfo: 'red-button',\n    },\n  };\n\n  return (\n    <div className=\"App content\">\n      <div className=\"box content-container\">\n        <h1 className=\"\">Dynamic list of Goods</h1>\n\n        {Object.values(RequestType).map(requestType => {\n          const { onClick, content, dataInfo } = buttonsData[requestType];\n\n          return (\n            <button\n              key={dataInfo}\n              type=\"button\"\n              data-cy={dataInfo}\n              onClick={onClick}\n              className=\"button\"\n            >\n              {`Load ${content}`}\n            </button>\n          );\n        })}\n\n        {isLoading && (\n          <div className=\"loader-wrapper is-active\">\n            <div className=\"loader is-loading\" />\n          </div>\n        )}\n\n        {hasError && !isLoading && (\n          <div className=\"card-header-title has-text-danger\">\n            An error occurred, please try again...\n          </div>\n        )}\n\n        {!isLoading && !hasError && <GoodsList goods={goods} />}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}